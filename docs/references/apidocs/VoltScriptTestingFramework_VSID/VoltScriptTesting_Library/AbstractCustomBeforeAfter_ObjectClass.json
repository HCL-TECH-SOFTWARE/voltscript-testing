{"classname":"AbstractCustomBeforeAfter","comment":"Class for custom beforeAll, beforeEach, afterEach and afterAll code.\nbeforeAll is automatically run during TestSuite.isStarted() function.\nbeforeEach is automatically run by core TestSuite assertions, but must be manually run in custom assertion tests.\nafterEach is automatically run by core TestSuite assertions, but must be run manually in custom assertion tests.\nafterAll is automatically run during TestSuite.delete() function, at the end of the scope for the TestSuite.","containerclasstype":"","filenamebase":"AbstractCustomBeforeAfter_ObjectClass","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting","qn":"AbstractCustomBeforeAfter","codesample":"","signaturecode":1024,"instancecode":1024,"classtype":"Base","projectid":"48B1E34403B8B6D480258934005548BC","version":3,"classid":"CE53564B6D5B5C7A8025893400572CF2","signature":"Class AbstractCustomBeforeAfter","modifiers":"","classname":"AbstractCustomBeforeAfter","parentclassname":"None","constructorsignature":"Sub New()","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Class for custom beforeAll, beforeEach, afterEach and afterAll code.&amp;lt;br /&amp;gt;beforeAll is automatically run during TestSuite.isStarted() function.&amp;lt;br /&amp;gt;beforeEach is automatically run by core TestSuite assertions, but must be manually run in custom assertion tests.&amp;lt;br /&amp;gt;afterEach is automatically run by core TestSuite assertions, but must be run manually in custom assertion tests.&amp;lt;br /&amp;gt;afterAll is automatically run during TestSuite.delete() function, at the end of the scope for the TestSuite.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Class for custom beforeAll, beforeEach, afterEach and afterAll code.&amp;lt;br /&amp;gt;beforeAll is automatically run during TestSuite.isStarted() function.&amp;lt;br /&amp;gt;beforeEach is automatically run by core TestSuite assertions, but must be manually run in custom assertion tests.&amp;lt;br /&amp;gt;afterEach is automatically run by core TestSuite assertions, but must be run manually in custom assertion tests.&amp;lt;br /&amp;gt;afterAll is automatically run during TestSuite.delete() function, at the end of the scope for the TestSuite.","inlinecomment":" \t &amp;apos; Class for custom beforeAll, beforeEach, afterEach and afterAll code.\nbeforeAll is automatically run during TestSuite.isStarted() function.\nbeforeEach is automatically run by core TestSuite assertions, but must be manually run in custom assertion tests.\nafterEach is automatically run by core TestSuite assertions, but must be run manually in custom assertion tests.\nafterAll is automatically run during TestSuite.delete() function, at the end of the scope for the TestSuite.","codesamplehtml":"", "methods":[{"label":"afterAll","comment":"Code to run after all assertions have been completed.","containerclasstype":"","filenamebase":"afterAll_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.AbstractCustomBeforeAfter","qn":"afterAll","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub afterAll()","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Code to run after all assertions have been completed.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Code to run after all assertions have been completed.","inlinecomment":" \t &amp;apos; Code to run after all assertions have been completed.","parentclassname":"AbstractCustomBeforeAfter","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class", "signatureelements":["Sub"]},{"label":"afterEach","comment":"Code to run after each assertion is completed.","containerclasstype":"","filenamebase":"afterEach_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.AbstractCustomBeforeAfter","qn":"afterEach","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub afterEach()","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Code to run after each assertion is completed.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Code to run after each assertion is completed.","inlinecomment":" \t &amp;apos; Code to run after each assertion is completed.","parentclassname":"AbstractCustomBeforeAfter","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class", "signatureelements":["Sub"]},{"label":"beforeAll","comment":"Code to run before any assertion starts.","containerclasstype":"","filenamebase":"beforeAll_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.AbstractCustomBeforeAfter","qn":"beforeAll","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub beforeAll()","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Code to run before any assertion starts.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Code to run before any assertion starts.","inlinecomment":" \t &amp;apos; Code to run before any assertion starts.","parentclassname":"AbstractCustomBeforeAfter","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class", "signatureelements":["Sub"]},{"label":"beforeEach","comment":"Code to run before each assertion.","containerclasstype":"","filenamebase":"beforeEach_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.AbstractCustomBeforeAfter","qn":"beforeEach","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub beforeEach()","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Code to run before each assertion.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Code to run before each assertion.","inlinecomment":" \t &amp;apos; Code to run before each assertion.","parentclassname":"AbstractCustomBeforeAfter","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class", "signatureelements":["Sub"]},{"label":"New","comment":"","containerclasstype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.AbstractCustomBeforeAfter","qn":"New","codesample":"","signaturecode":32,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Sub New()","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"AbstractCustomBeforeAfter","codesamplehtml":"", "signatureelements":["Sub"]}]}
