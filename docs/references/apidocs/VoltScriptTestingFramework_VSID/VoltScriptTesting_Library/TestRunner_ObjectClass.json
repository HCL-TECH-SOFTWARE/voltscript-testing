{"classname":"TestRunner","comment":"Wrapper for outputting an index.htm for multiple TestSuites","containerclasstype":"","filenamebase":"TestRunner_ObjectClass","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting","qn":"TestRunner","codesample":"","signaturecode":1024,"instancecode":1024,"classtype":"Base","projectid":"48B1E34403B8B6D480258934005548BC","version":3,"classid":"2709F2D6CCA8EA6880258935003A6AA6","signature":"Class TestRunner","modifiers":"","classname":"TestRunner","parentclassname":"None","constructorsignature":"Sub New(title As String)","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Wrapper for outputting an index.htm for multiple TestSuites&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Wrapper for outputting an index.htm for multiple TestSuites","inlinecomment":" \t &amp;apos; Wrapper for outputting an index.htm for multiple TestSuites","codesamplehtml":"", "methods":[{"label":"addTestSuite","comment":"Adds a TestSuite to this TestRunner","containerclasstype":"","filenamebase":"addTestSuite_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"addTestSuite","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)\nDim testSuite as New TestSuite(&amp;quot;Tests1&amp;quot;)\nCall testRunner.addTestSuite(testSuite)","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub addTestSuite(testSuite As TestSuite)","argumentsuffix":"(testSuite As TestSuite)","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Adds a TestSuite to this TestRunner&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Adds a TestSuite to this TestRunner","inlinecomment":" \t &amp;apos; Adds a TestSuite to this TestRunner","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)&amp;lt;br /&amp;gt;Dim testSuite as New TestSuite(&amp;quot;Tests1&amp;quot;)&amp;lt;br /&amp;gt;Call testRunner.addTestSuite(testSuite)", "signatureelements":["Sub"], "arguments":[{"label":"testSuite","comment":"TestSuite to add to this TestRunner","valuetype":"TestSuite","filenamebase":"testSuite_ValuedElement","fqnprefix":"VoltScriptTestingFrameworkVoltScriptTestingTestRunneraddTestSuite","qn":"testSuite","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;TestSuite to add to this TestRunner&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"TestSuite to add to this TestRunner","inlinecomment":" \t &amp;apos; TestSuite to add to this TestRunner"}]},{"label":"createTestSuite","comment":"Creates a new TestSuite with a label and adds it to this TestRunner","valuetype":"TestSuite","filenamebase":"createTestSuite_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"createTestSuite","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)\nDim currentSuite as TestSuite\nSet currentSuite = testRunner.createTestSuite(&amp;quot;Tests1&amp;quot;)","signaturecode":64,"instancecode":64,"f_returnsobject":1,"signature":"Function createTestSuite(title As String) As TestSuite","argumentsuffix":"(title As String)","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Creates a new TestSuite with a label and adds it to this TestRunner&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Creates a new TestSuite with a label and adds it to this TestRunner","inlinecomment":" \t &amp;apos; Creates a new TestSuite with a label and adds it to this TestRunner","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)&amp;lt;br /&amp;gt;Dim currentSuite as TestSuite&amp;lt;br /&amp;gt;Set currentSuite = testRunner.createTestSuite(&amp;quot;Tests1&amp;quot;)", "signatureelements":["Function"], "arguments":[{"label":"title","comment":"Title for the test suite","valuetype":"String","filenamebase":"title_ValuedElement","fqnprefix":"VoltScriptTestingFrameworkVoltScriptTestingTestRunnercreateTestSuite","qn":"title","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Title for the test suite&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Title for the test suite","inlinecomment":" \t &amp;apos; Title for the test suite"}]},{"label":"Delete","comment":"Destructor. Prints out reports and erases test suites List.","containerclasstype":"","filenamebase":"Delete_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"Delete","codesample":"","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub Delete()","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Destructor. Prints out reports and erases test suites List.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Destructor. Prints out reports and erases test suites List.","inlinecomment":" \t &amp;apos; Destructor. Prints out reports and erases test suites List.","parentclassname":"TestRunner","codesamplehtml":"", "signatureelements":["Sub"]},{"label":"getFilePath","comment":"Gets the directory to save the HTML / XML output to.","valuetype":"String","filenamebase":"getFilePath_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"getFilePath","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)\nPrint &amp;quot;Tests will be written to &amp;quot; &amp; testRunner.getFilePath()) &amp; &amp;quot; as &amp;quot; &amp; testRunner.getOutputFormat()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"signature":"Function getFilePath() As String","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Gets the directory to save the HTML / XML output to.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Gets the directory to save the HTML / XML output to.","inlinecomment":" \t &amp;apos; Gets the directory to save the HTML / XML output to.","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)&amp;lt;br /&amp;gt;Print &amp;quot;Tests will be written to &amp;quot; &amp; testRunner.getFilePath()) &amp; &amp;quot; as &amp;quot; &amp; testRunner.getOutputFormat()", "signatureelements":["Function"]},{"label":"getOutputFormat","comment":"Getter for the output format, default is HTML.","valuetype":"String","filenamebase":"getOutputFormat_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"getOutputFormat","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)\nPrint &amp;quot;Tests will be written to &amp;quot; &amp; testRunner.getFilePath()) &amp; &amp;quot; as &amp;quot; &amp; testRunner.getOutputFormat()","signaturecode":64,"instancecode":64,"f_returnsobject":1,"signature":"Function getOutputFormat() As String","argumentsuffix":"()","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Getter for the output format, default is HTML.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Getter for the output format, default is HTML.","inlinecomment":" \t &amp;apos; Getter for the output format, default is HTML.","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)&amp;lt;br /&amp;gt;Print &amp;quot;Tests will be written to &amp;quot; &amp; testRunner.getFilePath()) &amp; &amp;quot; as &amp;quot; &amp; testRunner.getOutputFormat()", "signatureelements":["Function"]},{"label":"New","comment":"Constructor","containerclasstype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"New","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)","signaturecode":32,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(title As String)","signature":"Sub New(title As String)","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Constructor&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Constructor","inlinecomment":" \t &amp;apos; Constructor","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)", "signatureelements":["Sub"], "arguments":[{"label":"title","comment":"Title for the test run","valuetype":"String","filenamebase":"title_ValuedElement","fqnprefix":"VoltScriptTestingFrameworkVoltScriptTestingTestRunnerNew","qn":"title","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Title for the test run&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Title for the test run","inlinecomment":" \t &amp;apos; Title for the test run"}]},{"label":"outputTo","comment":"Sets a directory to write reports to.","valuetype":"TestRunner","filenamebase":"outputTo_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"outputTo","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)\nCall testRunner.outputTo(&amp;quot;unit-tests/&amp;quot;)","signaturecode":64,"instancecode":64,"f_returnsobject":1,"signature":"Function outputTo(outputLoc As String) As TestRunner","argumentsuffix":"(outputLoc As String)","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Sets a directory to write reports to.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Sets a directory to write reports to.","inlinecomment":" \t &amp;apos; Sets a directory to write reports to.","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)&amp;lt;br /&amp;gt;Call testRunner.outputTo(&amp;quot;unit-tests/&amp;quot;)", "signatureelements":["Function"], "arguments":[{"label":"outputLoc","comment":"Directory to write reports","valuetype":"String","filenamebase":"outputLoc_ValuedElement","fqnprefix":"VoltScriptTestingFrameworkVoltScriptTestingTestRunneroutputTo","qn":"outputLoc","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Directory to write reports&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Directory to write reports","inlinecomment":" \t &amp;apos; Directory to write reports"}]},{"label":"setOutputFormat","comment":"Sets the output format for the reports","valuetype":"TestRunner","filenamebase":"setOutputFormat_Method","fqnprefix":"VoltScriptTestingFramework.VoltScriptTesting.TestRunner","qn":"setOutputFormat","codesample":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)\nCall testRunner.setOutputFormat(&amp;quot;BOTH&amp;quot;)","signaturecode":64,"instancecode":64,"f_returnsobject":1,"signature":"Function setOutputFormat(formatType As String) As TestRunner","argumentsuffix":"(formatType As String)","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Sets the output format for the reports&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Sets the output format for the reports","inlinecomment":" \t &amp;apos; Sets the output format for the reports","parentclassname":"TestRunner","codesamplehtml":"Dim testRunner as New TestRunner(&amp;quot;Tests&amp;quot;)&amp;lt;br /&amp;gt;Call testRunner.setOutputFormat(&amp;quot;BOTH&amp;quot;)", "signatureelements":["Function"], "arguments":[{"label":"formatType","comment":"Format for the reports, &amp;quot;HTML&amp;quot;, &amp;quot;XML&amp;quot;, or &amp;quot;BOTH&amp;quot;","valuetype":"String","filenamebase":"formatType_ValuedElement","fqnprefix":"VoltScriptTestingFrameworkVoltScriptTestingTestRunnersetOutputFormat","qn":"formatType","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Format for the reports, &amp;quot;HTML&amp;quot;, &amp;quot;XML&amp;quot;, or &amp;quot;BOTH&amp;quot;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Format for the reports, &amp;quot;HTML&amp;quot;, &amp;quot;XML&amp;quot;, or &amp;quot;BOTH&amp;quot;","inlinecomment":" \t &amp;apos; Format for the reports, &amp;quot;HTML&amp;quot;, &amp;quot;XML&amp;quot;, or &amp;quot;BOTH&amp;quot;"}]}], "variables":[]}
